DM最初的含义是表示Diversity Metric，其实可以理解为在这份代码里面做了图，图里的曲线到现在也不局限于多样性曲线。

GA_LLS_DM.py是Weak/Low Local Search, 就是进行局部搜索时，只有满足两个条件才进行局部搜索：一是该个体之前没有进行过局部搜索，二是该个体也不属于已经局部搜索过的个体的邻域。solveFLPbyGAwithLS-Low.py调用的就是GA_LLS_DM.py.

GA_SLS_DM.py是Strong Local Search, 就是进行局部搜索时，不做任何额外的检查，不管之前有没有对该个体搜索过，都认为这是演化的趋势，对该个体进行局部搜索。solveFLPbyGAwithLS-Strong.py调用的就是GA_SLS_DM.py.

以上是中期之前的。在100-node上，Strong LS比Weak LS效果好，但Weak LS有改进空间，改进后会比Strong LS好。

中期以后，对Weak LS进行纠正，一是取消了weak LS的第二个条件，二是要累计局部搜索共10个个体，而不局限于（μ+λ）种群的前10个。我打算把这种的局部搜索叫做带记忆的局部搜索（Memorable Local Search, MLS），即不会对已经局部搜索过的个体重复进行局部搜索; 而上面的Strong local search，我打算叫做不带记忆的局部搜索（MemoryLess Local Search, MLLS）. 在MLS的基础上进行进一步改进，延伸出了两个版本的算法。

第1个版本，GA+MLS，去掉GA中的交叉和变异操作，对种群规模进行自适应。为什么要对种群规模进行自适应（实际就是逐渐扩大种群规模）？因为在100-node，popsize=50，演化50代时，随着演化的进行，遍历生存下来的μ个个体，能够进行局部搜索为种群补充新个体的个体越来越少，以至于到最后μ个个体全都被局部搜索过。这样种群就没有新鲜血液注入，又没有变异操作，无法进行探索exploration，演化停滞。所以设置在紫色线指标（我还没想好名字）达到0.8时就使种群规模和进行局部搜索的个体翻倍。这种操作使得紫线一直没有达到1.
第2个版本，GA+MLS，但是去掉GA中的交叉操作，留下变异操作。在100-node，popsize=50，演化50代的情况下，演化到最后也没有出现没有新个体进行局部搜索的情况，但尽管一直会有新个体进行局部搜索，但演化后期紫线还是达到了1.0并稳定保持。 演化停滞，而且像上面版本那样增大种群规模和局部搜索个体的规模并无明显效果，即，紫线还是会很快超过0.8，使得种群规模增长太快，计算时间太长。

上面两个版本的改进哪个效果更好，应该还需要更多实验才能看出。但我个人估计，因为版本2有变异操作的存在，理应比版本1进行了更大范围的局部搜索（但未必就比版本1进行了更多的fe次数，只是个体分布的区域更广）。另外，紫线达到1之后，就足够说明演化已经收敛，因为尽管或许还能产生未进行局部搜索过的个体，但已经产生不了新的没有见过的个体，如果还要进行，则可以考虑如何重启或者其他跳出局部最优的操作，继续放着不管任由算法演化意义不大，效率太低了。